<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:Converter="clr-namespace:StudentInformation.Converter" 
        x:Class="StudentInformation.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <Converter:StringToColorConverter x:Key="StringToColor"/>
        <Style TargetType ="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType='Button'>
                        <Grid>
                            <Rectangle Fill='{TemplateBinding Background}'/>
                            <ContentPresenter HorizontalAlignment='Center'
                            VerticalAlignment='Center'/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Background" Value="{Binding Student.Name}"/>-->
            <Setter Property="FontSize" Value="{Binding Student.Age}"/>
            <!--<Setter Property = "Background" Value="Yellow"/>-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property = "Background" Value="Green"/>
                    <Setter Property = "Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        
        
        
        <Style x:Key="ButtonStyleBg" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="{Binding Student.Age}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <!--<Window.DataContext>
        <ViewModel:MainViewModel/>
    </Window.DataContext>-->


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBox x:Name = "nameBox"  Text="{Binding Student.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Row="1" Text="{Binding Student.Email}"/>
        <TextBox Grid.Row="2" Text="{Binding Student.Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBox Grid.Row="3" Text="{Binding Student.Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Grid Grid.Row="4" Background="Blue">
            <Grid Background="Gray" Margin="10">
                <Border Background="Red" Margin="50">
                    <StackPanel Background="White" Margin="20">
                        <Button Margin="10" Content="WriteContentInDebugOutput" Command = "{Binding DisplayMessageCommand}" CommandParameter ="{Binding ElementName = nameBox, Path=Text}" />
                        <Button Style="{DynamicResource ButtonStyleBg}" Margin="10" Content="ChangeColor" />
                        <Button Margin="10" Content="Button1" Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}" Click="Button_Click" />
                        <Button Margin="{Binding Margin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}" Content="Button2" Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}" />
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
        <TextBox Grid.Row="5" Text="{Binding Student.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Background="{Binding Student.Name, Converter={StaticResource StringToColor}}" />
        <!--<ComboBox Grid.Row="6" ItemsSource="{Binding GetStudents}">
            
        </ComboBox>-->
        <ComboBox Grid.Row="6" ItemsSource="123">

        </ComboBox>
    </Grid>
</Window>
